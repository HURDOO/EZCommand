buildscript {

}

plugins {
    id 'java'
    id 'org.openjfx.javafxplugin' version '0.0.8' apply false
    //id 'org.beryx.jlink' version '2.12.0'
    id 'application'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'org.openjfx.javafxplugin'
    //apply plugin: 'org.beryx.jlink'
    apply plugin: 'application'
}

subprojects {

    compileJava.options.encoding = 'UTF-8'

    repositories {
        mavenCentral()
        //mavenLocal()
        jcenter()
    }

    dependencies {
        compile files('../libs/json-simple-1.1.1.jar')
        // compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
        implementation 'org.jetbrains:annotations:19.0.0'
        // testCompile group: 'junit', name: 'junit', version: '4.12'
        testImplementation ('junit:junit:4.12') {
            exclude group: 'org.hamcrest'
        }
        compile "org.openjfx:javafx-fxml:11.0.1"
        compile 'org.apache.logging.log4j:log4j-core:2.11.1'
        compile files('../libs/scenicview.jar')
        implementation 'org.yaml:snakeyaml:1.28'

        implementation 'org.controlsfx:controlsfx:11.1.0'
        compile group: 'org.fxmisc.richtext', name: 'richtextfx', version: '0.10.6'
        compile 'com.cathive.fonts:fonts-fontawesome:3.2.1.0'
        implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    }
    javafx {
        version =  "14"
        modules = [ 'javafx.controls', 'javafx.base', 'javafx.graphics', 'javafx.fxml', 'javafx.swing', 'javafx.web']
    }
}

project(':je-1165') {
    dependencies {
        compile project(':ezcommand-program')
    }
}

group 'kr.kro.ezcommand'
version 'Alpha-0.2'

/*configurations {
    compileOnly {
        exclude group: 'org.hamcrest', module: 'junit'
    }
}*/




//mainClassName = "kr.kro.ezcommand.MainExecutor"

/*jlink {
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'helloFX'
    }
    forceMerge('log4j-api')
    jpackage {
        if (org.gradle.internal.os.OperatingSystem.current().windows) {
            installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
        }
    }
}*/

//sourceSets.main.resources {
//    srcDirs = ["src/main/java"]; //assume that your java classes are inside this path
//    exclude "**/*.java"
//}

//mainClassName = 'kr.kro.ezcommand.MainExecutor'
